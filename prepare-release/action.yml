name: Prepare Release
description: Prepares a release by running towncrier and creating a PR with the changes.
inputs:
  version:
    description: The version to release.
    required: true
  branch:
    description: The target branch to use for the release.
    default: ${{ github.event.repository.default_branch }}
  branch-sha:
    description: The SHA from which to create the target branch if missing.
  changelog-author:
    description: Git-format author to use for the changelog commits.
    default: Conda Bot <18747875+conda-bot@users.noreply.github.com>
  token:
    description: 'GitHub token to create release branch if missing and the pull request. Fine-grained PAT: `pull-request: write; contents: write`'
    default: ${{ github.token }}
  fork-token:
    description: 'GitHub token to create and push to the fork. Fine-grained PAT: `administration: write; contents: write`'
runs:
  using: composite
  steps:
    - name: Checkout Source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Create Branch
      shell: bash
      run: |
        if ! git fetch origin "${{ inputs.branch }}"; then
          # if branch doesn't exist, create it from the default branch
          gh api \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            "/repos/${{ github.repository }}/git/refs" \
            -f ref="refs/heads/${{ inputs.branch }}" \
            -f sha="$(git rev-parse ${{ inputs.branch-sha || github.event.repository.default_branch }})"
        fi
        git fetch origin
        git checkout "${{ inputs.branch }}"
        git pull origin "${{ inputs.branch }}"
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Load Pip Cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: ~/.cache/pip
        # invalidate the cache anytime a workflow changes
        key: ${{ github.workflow }}-${{ hashFiles('.github/workflows/*') }}

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Pip Install
      shell: bash
      run: pip install --quiet -r ${{ github.action_path }}/requirements.txt

    - name: Pip List
      shell: bash
      run: pip list

    - name: Run Towncrier
      shell: bash
      run: towncrier build --version=${{ inputs.version }}

    # - name: Detect Contributors

    # - name: Detect First-Time Contributors

    - name: Create Fork
      # no-op if the repository is already forked
      shell: bash
      # don't use `gh repo fork` since it doesn't provide consistent output
      # see: https://github.com/cli/cli/issues/10079
      run: |
        RESPONSE=$(gh api \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          "/repos/${{ github.repository }}/forks" \
          -f default_branch_only=true)

        # extract values with jq
        FULL_NAME="$(echo "${RESPONSE}" | jq -r '.full_name')"
        CREATED_AT="$(echo "${RESPONSE}" | jq -r '.created_at')"

        # wait a minute to ensure the fork is ready
        TIMESTAMP="$(date -d "${CREATED_AT}" +%s)"
        CURRENT="$(date +%s)"
        [ $((CURRENT - TIMESTAMP)) -gt 60 ] || sleep 60

        # store values for subsequent usage
        echo FORK="${FULL_NAME}" >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ inputs.fork-token || inputs.token }}

    - name: Create PR
      uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5
      with:
        # push to the fork
        branch-token: ${{ inputs.fork-token || inputs.token }}
        push-to-fork: ${{ env.FORK }}
        branch: changelog-${{ inputs.version }}
        commit-message: Changelog ${{ inputs.version }}
        author: ${{ inputs.changelog-author }}
        committer: ${{ inputs.changelog-author }}
        # create PR
        token: ${{ inputs.token }}
        base: ${{ inputs.branch }}
        delete-branch: true
        title: Changelog ${{ inputs.version }}
        body: |
          [release.yml]: ${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/release.yml

          ✂️ snip snip ✂️ the making of a new release.

          This PR was triggered by @${{ github.triggering_actor }} via ${{ github.event_name }}.

          ###### Auto-generated by the [`release.yml`][release.yml] workflow, see ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.
