name: Prepare Release
description: Prepares a release by running towncrier and creating a PR with the changes.
inputs:
  version:
    description: Release version.
    required: true
  branch:
    description: Target branch for the release. Unless specified, uses the default branch.
  changelog_author:
    description: Git-format author/committer to use for pull request commits
    default: Conda Bot <18747875+conda-bot@users.noreply.github.com>
  fork-token:
    description: 'GitHub token to fork repository (`???: write`).'
    default: ${{ github.token }}
  branch-token:
    description: 'GitHub token to checkout and create the release branch (`contents: write`).'
    default: ${{ github.token }}
  pr-token:
    description: 'GitHub token to create the changelog PR (`pull-request: write`).'
    default: ${{ github.token }}
runs:
  using: composite
  steps:
    - name: Checkout Source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
        token: ${{ inputs.branch-token }}

    - name: Create Branch
      shell: bash
      run: |
        if git fetch origin "${{ inputs.branch }}"; then
          # if branch already exists, checkout and pull
          git checkout "${{ inputs.branch }}"
          git pull origin "${{ inputs.branch }}"
        else
          # if branch doesn't exist, create and push
          git checkout -b "${{ inputs.branch }}"
          git push -u origin "${{ inputs.branch }}"
        fi

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: pip
        cache-dependency-path: ${{ github.action_path }}/requirements.txt

    - name: Pip Install
      shell: bash
      run: pip install -r ${{ github.action_path }}/requirements.txt

    - name: Pip List
      shell: bash
      run: pip list

    - name: Run Towncrier
      shell: bash
      run: towncrier build --version ${{ inputs.version }}

    # - name: Detect Contributors

    # - name: Detect First-Time Contributors

    - name: Create Fork
      # no-op if the repository is already forked
      shell: bash
      run: echo FORK=$(gh repo fork --clone=false --default-branch-only 2>&1 | awk '{print $1}') >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ inputs.fork-token }}

    - name: Create PR
      uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5
      with:
        push-to-fork: ${{ env.FORK }}
        token: ${{ inputs.pr-token }}
        branch-token: ${{ inputs.fork-token}}
        branch: changelog-${{ inputs.version }}
        base: ${{ inputs.branch }}
        delete-branch: true
        commit-message: Changelog ${{ inputs.version }}
        author: ${{ inputs.changelog_author }}
        committer: ${{ inputs.changelog_author }}
        title: Changelog ${{ inputs.version }}
        body: |
          [release.yml]: ${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/release.yml

          ✂️ snip snip ✂️ the making of a new release.

          This PR was triggered by @${{ github.triggering_actor }} via ${{ github.event_name }}.

          ###### Auto-generated by the [`release.yml`][release.yml] workflow, see ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.
