name: CLA check
description: Reacts to new PRs and check if the contributor has previously signed the conda contributor license agreement (CLA).
inputs:
  token:
    description: >-
      A token with ability to comment, label, and modify the commit status
      (`pull_request: write` and `statuses: write` for fine-grained PAT; `repo` for classic PAT)
    default: ${{ github.token }}
    required: true
  label:
    description: Label to apply to contributor's PR once CLA is signed
    required: true
  cla_repo:
    description: Upstream repository in which to create PR
    default: conda/cla
  cla_path:
    description: Path to the CLA signees file within the provided `cla_repo`
    default: .cla-signers
  cla_token:
    description: >-
      Token for opening signee PR in `cla_fork`
      (`pull_request: write` for fine-grained PAT; `repo` and `workflow` for classic PAT)
    required: true

runs:
  using: composite
  steps:
    # if triggered by a comment, leave a reaction to indicate we are processing the request
    - name: Set Comment Reaction [eyes]
      uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
      if: github.event_name == 'issue_comment'
      with:
        token: ${{ inputs.token }}
        comment-id: ${{ github.event.comment.id }}
        reactions: eyes
        reactions-edit-mode: replace

    # commit status â†’ pending
    - name: Set Commit Status [pending]
      uses: conda/actions/set-commit-status@6e72e0db87e72f0020e493aeb02f864363bd9258 # v24.11.1
      with:
        token: ${{ inputs.token }}
        context: CLA check
        description: Checking conda CLA...
        state: pending

    - name: Detect PR Label
      id: detect_label
      shell: bash
      run: echo has_label=$(${{ contains(github.event.pull_request.labels || github.event.issue.labels, inputs.label) }}) >> $GITHUB_OUTPUT

    - name: Detect Contributor
      id: detect_contributor
      shell: bash
      run: |
        echo contributor_id=${{ github.event.pull_request.user.id || github.event.issue.user.id }} >> $GITHUB_OUTPUT
        echo contributor_login=${{ github.event.pull_request.user.login || github.event.issue.user.login }} >> $GITHUB_OUTPUT

    - name: Read CLA Signees
      id: read_cla
      uses: conda/actions/read-file@read-file
      with:
        path: https://raw.githubusercontent.com/${{ inputs.cla_repo }}/main/${{ inputs.cla_path }}
        parser: json
        default: '{}'

    - name: Detect Signature
      id: detect_signature
      shell: bash
      run: echo has_signed=${{ contains(fromJSON(steps.read_cla.outputs.content), steps.detect_contributor.outputs.contributor_id) }} >> $GITHUB_OUTPUT

    # if contributor has already signed, add label
    - name: Set PR Label
      uses: actions-ecosystem/action-add-labels@18f1af5e3544586314bbe15c0273249c770b2daf # v1.1.3
      if: steps.detect_signature.outputs.has_signed == 'true' && steps.detect_label.outputs.has_label == 'false'
      with:
        github_token: ${{ inputs.token }}
        labels: ${{ inputs.label }}

    # if contributor has not signed yet, remove label
    - name: Remove PR Label
      uses: actions-ecosystem/action-remove-labels@2ce5d41b4b6aa8503e285553f75ed56e0a40bae0 # v1.3.0
      if: steps.detect_signature.outputs.has_signed == 'false' && steps.detect_label.outputs.has_label == 'true'
      with:
        github_token: ${{ inputs.token }}
        labels: ${{ inputs.label }}

    # if unsigned, checkout cla_repo
    - name: Clone CLA Repository
      if: steps.detect_signature.outputs.has_signed == 'false'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: ${{ inputs.cla_repo }}

    - name: Create Fork
      id: create-fork
      if: steps.detect_signature.outputs.has_signed == 'false'
      uses: conda/actions/create-fork@create-fork
      with:
        token: ${{ inputs.cla_token }}

    - name: Setup Python
      if: steps.detect_signature.outputs.has_signed == 'false'
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: '3.12'

    - name: Add Contributor Signature
      if: steps.detect_signature.outputs.has_signed == 'false'
      shell: bash
      run: >
        python ${{ github.action_path }}/action.py
        ${{ inputs.cla_path }}
        --id=${{ steps.detect_contributor.outputs.contributor_id }}
        --login=${{ steps.detect_contributor.outputs.contributor_login }}

    # if unsigned, create PR
    - name: Create PR
      id: pull
      if: steps.detect_signature.outputs.has_signed == 'false'
      uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f # v7.0.5
      with:
        push-to-fork: ${{ steps.create-fork.outputs.fork }}
        token: ${{ inputs.cla_token }}
        branch: cla-${{ steps.detect_contributor.outputs.contributor_id }}
        delete-branch: true
        commit-message: ðŸ¤– Add ${{ steps.detect_contributor.outputs.contributor_login }} (${{ steps.detect_contributor.outputs.contributor_id }}) as CLA signee
        author: Conda Bot <18747875+conda-bot@users.noreply.github.com>
        committer: Conda Bot <18747875+conda-bot@users.noreply.github.com>
        title: ðŸ¤– Add ${{ steps.detect_contributor.outputs.contributor_login }} (${{ steps.detect_contributor.outputs.contributor_id }}) as CLA signee
        body: Xref ${{ github.event.pull_request.user.html_url || github.event.issue.user.html_url }}

    # if unsigned, create sticky comment
    - name: Create Comment
      uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
      if: steps.detect_signature.outputs.has_signed == 'false'
      with:
        number: ${{ github.event.number || github.event.issue.number }}
        # GitHub flavored markdown reinvents how paragraphs work, adjoined lines of text are not
        # concatenated so instead we rely on YAML multi-line + extra newlines
        message: >-
          [cla]: https://conda.io/en/latest/contributing.html#conda-contributor-license-agreement


          > [!NOTE]

          > You may have previously signed the conda CLA. That signature is still valid
          for any prior contributions however conda is now a fiscally sponsored project
          by NumFOCUS and hence requires new CLAs to be signed for any new contributions.


          We require contributors to sign our [Contributor License Agreement][cla] and we don't
          have one on file for @${{ steps.detect_contributor.outputs.contributor_login }} (${{ steps.detect_contributor.outputs.contributor_id }}).


          In order for us to review and merge your code, please e-sign the
          [Contributor License Agreement PDF][cla]. We then need to manually verify your
          signature, merge the PR (${{ steps.pull.outputs.pull-request-url }}), and ping the bot
          to refresh the PR.


          <details>

          <summary>Commands</summary>


          Trigger actions by commenting on this PR:


          - `@conda-bot check` will check whether a CLA has been signed for this PR author


          </details>
        GITHUB_TOKEN: ${{ inputs.token }}

    # commit status â†’ error
    - name: Set Commit Status [error]
      if: steps.detect_signature.outputs.has_signed == 'false'
      uses: conda/actions/set-commit-status@6e72e0db87e72f0020e493aeb02f864363bd9258 # v24.11.1
      with:
        token: ${{ inputs.token }}
        context: CLA check
        description: Please follow the details link to sign the conda CLA. â†’
        state: error
        target_url: https://conda.io/en/latest/contributing.html#conda-contributor-license-agreement

    # commit status â†’ success
    - name: Set Commit Status [success]
      if: steps.detect_signature.outputs.has_signed == 'true'
      uses: conda/actions/set-commit-status@6e72e0db87e72f0020e493aeb02f864363bd9258 # v24.11.1
      with:
        token: ${{ inputs.token }}
        context: CLA check
        description: CLA signed, thank you!
        state: success

    # if triggered by a comment, leave a reaction to indicate we are done processing the request
    - name: Set Comment Reaction [hooray/confused]
      uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
      if: github.event_name == 'issue_comment'
      with:
        token: ${{ inputs.token }}
        comment-id: ${{ github.event.comment.id }}
        reactions: ${{ steps.detect_signature.outputs.has_signed == 'true' && 'hooray' || 'confused' }}
        reactions-edit-mode: replace
