---
name: CLA check
description: Reacts to new PRs and check if the contributor has previously signed the conda contributor license agreement (CLA).
inputs:
  token:
    description: 'A token with ability to comment, label, and modify the commit status (`pull_request: write` and `statuses: write`)'
    default: ${{ github.token }}
    required: true
  label:
    description: Label to apply to contributor's PR once CLA is singed
    required: true
  cla_repo:
    description: Upstream repository in which to create PR
    default: conda/infrastructure
  cla_path:
    description: Path to the CLA signees file within the provided `cla_repo`
    default: .clabot
  cla_fork:
    description: Fork of `cla_repo` in which to create branch
    default: conda-bot/infrastructure
  cla_token:
    description: Token for opening singee PR in `cla_fork`
    required: true

runs:
  using: composite
  steps:
    # has_label
    - name: Get PR labels
      id: pr
      uses: actions/github-script@v6
      with:
        script: |
          console.log(context.payload);

          const { owner, repo, number } = context.issue;
          core.debug(`owner: ${owner}`);
          core.debug(`repo: ${repo}`);
          core.debug(`number: ${number}`);

          const raw = await github.rest.pulls.get({
            owner: owner,
            repo: repo,
            pull_number: number
          });

          const labels = raw.data.labels.map(label => label.name)
          core.debug(`labels: ${labels}`);

          const has_label = labels.includes('${{ inputs.label }}')
          core.setOutput('has_label', has_label);
          core.debug(`has_label: ${has_label}`);

    # commit status → pending
    - name: Set commit status with pending
      uses: conda/actions/set-commit-status@customize-cla-repo
      with:
        token: ${{ inputs.token }}
        context: CLA check
        state: pending
        description: Checking conda CLA...

    # contributors, has_signed
    - name: Check if current actor has signed
      uses: actions/github-script@v6
      id: contributors
      with:
        github-token: ${{ inputs.token }}
        script: |
          const [owner, repo] = '${{ inputs.cla_repo }}'.split('/');
          core.debug(`owner: ${owner}`);
          core.debug(`repo: ${repo}`);

          const raw = await github.rest.repos.getContent({
            owner: owner,
            repo: repo,
            path: '${{ inputs.cla_path }}'
          });
          const contributors = JSON.parse(
            Buffer.from(
              raw.data.content,
              raw.data.encoding
            ).toString('utf-8')
          ).contributors;
          core.setOutput('contributors', contributors);
          core.debug(`contributors: ${contributors}`);

          const creator = (
            context.payload.issue
            || context.payload.pull_request
            || context.payload
          ).user.login;
          core.debug(`creator: ${creator}`);

          const has_signed = contributors.includes(creator);
          core.setOutput('has_signed', has_signed);
          core.debug(`has_signed: ${has_signed}`);

    # add [cla-signed] label if actor has already signed
    - name: Add label
      uses: actions-ecosystem/action-add-labels@v1.1.0
      if: steps.contributors.outputs.has_signed == 'true' && steps.pr.outputs.has_label == 'false'
      with:
        github-token: ${{ inputs.token }}
        labels: ${{ inputs.label }}

    # remove [cla-signed] label if actor has not signed yet
    - name: Remove label
      uses: actions-ecosystem/action-remove-labels@v1.3.0
      if: steps.contributors.outputs.has_signed == 'false' && steps.pr.outputs.has_label == 'true'
      with:
        github-token: ${{ inputs.token }}
        labels: ${{ inputs.label }}

    # checkout cla_repo to update cla_path
    - uses: actions/checkout@v3
      if: steps.contributors.outputs.has_signed == 'false'
      with:
        repository: ${{ inputs.cla_repo }}

    # update cla_path
    - shell: python
      if: steps.contributors.outputs.has_signed == 'false'
      run: |
        import json
        from pathlib import Path

        path = Path("${{ inputs.cla_path }}")
        signees = json.loads(path.read_text())
        signees["contributors"].append("${{ github.actor }}")
        signees["contributors"].sort()
        path.write_text(json.dumps(signees))

    # create PR
    - uses: peter-evans/create-pull-request@v4
      id: cla-pr
      if: steps.contributors.outputs.has_signed == 'false'
      with:
        push-to-fork: ${{ inputs.cla_fork }}
        token: ${{ inputs.cla_token }}
        branch: cla-${{ github.actor }}
        delete-branch: true
        commit-message: Adding CLA singee ${{ github.actor }}
        author: Conda Bot <18747875+conda-bot@users.noreply.github.com>
        committer: Conda Bot <18747875+conda-bot@users.noreply.github.com>
        title: Adding CLA singee ${{ github.actor }}
        body: |
          Adding CLA signee @${{ github.actor }}

          Xref ${{ github.event.pull_request.url }}

    # create sticky comment if not signed
    - name: Create comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: steps.contributors.outputs.has_signed == 'false'
      with:
        number: context.issue.number
        message: |
          We require contributors to sign our [Contributor License Agreement](https://conda.io/en/latest/contributing.html#conda-contributor-license-agreement) and we don't have one on file for @${{ github.event.pull_request.user.login }}.

          In order for us to review and merge your code, please e-sign the [Contributor License Agreement PDF](https://conda.io/en/latest/contributing.html#conda-contributor-license-agreement). We then need to manually verify your signature, merge the PR (${{ steps.cla-pr.outputs.pull-request-url }}), and ping the bot to refresh the PR.
        GITHUB_TOKEN: ${{ inputs.token }}

    # commit status → error
    - name: Set commit status to error
      if: steps.contributors.outputs.has_signed == 'false'
      uses: conda/actions/set-commit-status@customize-cla-repo
      with:
        token: ${{ inputs.token }}
        context: CLA check
        state: error
        description: Please follow the details link to sign the conda CLA. →
        target_url: https://conda.io/en/latest/contributing.html#conda-contributor-license-agreement

    # commit status → success
    - name: Set commit status to success
      if: steps.contributors.outputs.has_signed == 'true'
      uses: conda/actions/set-commit-status@customize-cla-repo
      with:
        token: ${{ inputs.token }}
        context: CLA check
        state: success
        description: CLA signed, thank you!
