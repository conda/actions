name: Read URL YAML
description: Reads in YAML file from URL.
author: Anaconda Inc.
inputs:
  path:
    description: Path to YAML file in this repo to read.
    required: true
  scopes:
    description: Path of keys to the value to extract from file (e.g. foo.bar).
    required: false
# cannot set outputs since they are dynamic based on the scopes value
# outputs:
#   data:
#     description: Data read from YAML file.
#     value: ${{ steps.read_yaml.outputs.data }}
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: npm install js-yaml
      shell: bash -l {0}
    - id: read_yaml
      uses: actions/github-script@v5
      with:
        script: |
          const yaml = require('js-yaml');

          async function read_yaml() {
            const path = core.getInput('path', { required: true });
            const scopes = yaml.load(core.getInput('scopes') || '{}');
            const url = `/repos/${context.repo.owner}/${context.repo.repo}/contents/${path}`;

            try {
              const resp = await github.request(`GET ${url}`, {ref: context.sha});
            } catch (err) {
              throw new Error(`Failed to fetch ${path} (${err.message})`);
            }
            let data = yaml.load(
              Buffer.from(
                resp["data"]["content"],
                resp["data"]["encoding"]
              ).toString('utf-8')
            );
            for (const scope in scopes) {
              let value = data;
              try {
                for (const key of scopes[scope].split('.'))
                  value = value instanceof Array ? value[parseInt(key)] : value[key];
              } catch (err) {
                throw new Error(`Failed to read ${scopes[scope]} (${err.message})`);
              }
              core.setOutput(scope, value);
            }
          }

          read_yaml().catch(err => {
            if (err instanceof Error) core.setFailed(err);
            else throw err;
          });
branding:
  icon: book-open
  color: green
