name: Canary releases
description: This builds and uploads canary releases of conda to the provided channel and label on anaconda.org.
inputs:
  package-name:
    description: Name of package on anaconda.org, needs to match build file name.
    required: true
  subdir:
    description: Subdirectory
    required: true
  comment-headline:
    description: Headline for build comment
    required: false
    default: Canary release status
  comment-token:
    description: Token for commenting build
    required: false
  anaconda-org-channel:
    description: Channel on anaconda.org
    required: true
  anaconda-org-label:
    description: Label to use on anaconda.org
    required: true
  anaconda-org-token:
    description: Upload token for anaconda.org
    required: true
  conda-build-dependencies:
    description: List of conda packages to install before building the package.
    required: false
  conda-build-arguments:
    description: Command line arguments for conda-build, inserted before recipe path with no processing.
    required: false
  conda-build-path:
    description: The path to the conda recipe passed to conda-build.
    required: false
    default: recipe
runs:
  using: composite
  steps:
    - uses: conda-incubator/setup-miniconda@d2e6a045a86077fb6cad6f5adf368e9076ddaa8d
      with:
        python-version: 3.11
        pkgs-dirs: ${{ runner.temp }}/other-pkgs-dir

    - name: Set output variables
      id: vars
      shell: bash
      run: echo "run_url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT

    - name: Create comment if there is no status update
      uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31
      if: inputs.comment-token != ''
      with:
        message: |
          # ${{ inputs.comment-headline }}
          > The workflow for building and uploading a canary release for ${{ inputs.package-name }} with the label `${{ inputs.anaconda-org-label }}` in channel `${{ inputs.anaconda-org-channel }}` [was started](${{ steps.vars.outputs.run_url }}) by @${{ github.actor }}!

          Once it's done, use this command to try it out in a new conda environment:

          ```
          conda install -c ${{ inputs.anaconda-org-channel }}/label/${{ inputs.anaconda-org-label }} ${{ inputs.package-name }}
          ```

        GITHUB_TOKEN: ${{ inputs.comment-token }}

    - name: Conda Install
      shell: bash -l {0}
      run: >
        conda install
        --yes
        conda-build
        anaconda-client
        ${{ inputs.conda-build-dependencies }}

    - name: Conda Install Git
      shell: bash -l {0}
      # git needs to be installed after conda-build
      # see https://github.com/conda/conda/issues/11758
      # see https://github.com/conda/actions/pull/47
      run: conda install --yes git

    - name: Conda Info
      shell: bash -l {0}
      run: conda info --verbose

    - name: Conda Config
      shell: bash -l {0}
      run: conda config --show-sources

    - name: Conda List
      shell: bash -l {0}
      run: conda list --show-channel-urls

    - name: Build Package
      shell: bash -l {0}
      # use conda-build installed into test env, not base env
      run: conda-build --croot=./pkgs ${{ inputs.conda-build-arguments }} ${{ inputs.conda-build-path }}

    - name: Upload Package
      shell: bash -l {0}
      run: >
        anaconda
        --token="${{ inputs.anaconda-org-token }}"
        upload
        --force
        --register
        --no-progress
        --user="${{ inputs.anaconda-org-channel }}"
        --label="${{ inputs.anaconda-org-label }}"
        ./pkgs/${{ inputs.subdir }}/${{ inputs.package-name }}-*.tar.bz2

    - name: Upload Info
      shell: bash -l {0}
      run: |
        echo "Uploaded the following files:"
        basename -a ./pkgs/${{ inputs.subdir }}/${{ inputs.package-name }}-*.tar.bz2

        echo "Use this command to try out the build:"
        echo "conda install -c ${{ inputs.anaconda-org-channel }}/label/${{ inputs.anaconda-org-label }} ${{ inputs.package-name }}"

    - name: Leave comment after build
      if: inputs.comment-token != '' && success()
      uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31
      with:
        append: true
        message: |
          - build [${{ github.run_id }}](${{ steps.vars.outputs.run_url }}) succeeded on ${{ runner.os }} (${{ runner.arch }})
        GITHUB_TOKEN: ${{ inputs.comment-token }}

    - name: Leave comment after build
      if: inputs.comment-token != '' && failure()
      uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31
      with:
        append: true
        message: |
          - build [${{ github.run_id }}](${{ steps.vars.outputs.run_url }}) failed on ${{ runner.os }} (${{ runner.arch }})
        GITHUB_TOKEN: ${{ inputs.comment-token }}
