name: Template Files
description: Template (or copy) files from other repositories and commits them to the specified PR.
author: Anaconda Inc.
branding:
  icon: book-open
  color: green

inputs:
  config:
    description: Configuration path defining what files to template/copy.
    default: .github/template-files/config.yml
  stubs:
    description: Path to where stub files are located in the current repository.
    default: .github/template-files/templates/
  token:
    description: >-
      GitHub token to fetch remote files from repositories
      (no extra permissions are needed to access public repositories).
    default: ${{ github.token }}
outputs:
  summary:
    description: Summary of the files that were templated/copied.
    value: ${{ steps.template.outputs.summary }}

runs:
  using: composite
  steps:
    # `hashFiles` only works on files within the working directory, since `requirements.txt`
    # is not in the working directory we need to manually compute the SHA256 hash
    - name: Compute Hash
      id: hash
      shell: bash
      run: echo hash=$(sha256sum ${{ github.action_path }}/requirements.txt | awk '{print $1}') >> $GITHUB_OUTPUT

    - name: Pip Cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: ~/.cache/pip
        key: ${{ github.workflow }}-template-files-${{ steps.hash.outputs.hash }}

    - name: Setup Python
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: '>=3.9'

    - name: Pip Install
      shell: bash
      run: pip install --quiet -r ${{ github.action_path }}/requirements.txt

    - name: Pip List
      shell: bash
      run: pip list

    - name: Template Files
      id: template
      shell: bash
      run: python ${{ github.action_path }}/template_files.py --config ${{ inputs.config }} --stubs ${{ inputs.stubs }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
